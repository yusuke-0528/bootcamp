・git clone
「git clone」のコマンドは共有レポジトリから参加している個人のローカルレポジトリに複製を行うことができるコード。
このコマンドのオプションの代表例は以下のようなものがある。
・--branch <ブランチ名>　or  -b <ブランチ名>
意味： 指定したブランチだけをクローンする。
例： git clone --branch https://github.com
・--depth <数値>
意味：履歴を最新から指定数だけに制限する。
例：git clone --depth 10 https://github.com

・git checkout
「git checkout」は操作するブランチの切り替えやファイルの復元などに使うコマンドである。以下に「git checkout」のオプションの代表例を示す。
・-b <ブランチ名>
意味：新しいブランチを作成し操作の場所をできたブランチに移す。
・-B <ブランチ名>
意味：同じ名称のブランチがあった場合は、ブランチの上書き。同じ名称がなければ新規作成して、操作場所を移す。

・git branch
「git branch」はリポジトリ内で初期設定として生まれる「main」以外のブランチを作成するためのコマンドである。
「git branch <ブランチ名>」が基本構造であり<ブランチ名>で名称を決める。ブランチ名の前にコードを入れることでオプションを作る。「git branch」のオプションの代表例は以下のものがある。
・-a
意味：ローカルブランチとリモートブランチのすべてのブランチを表示する。
・-r
意味：リモートブランチのみ表示する。
・--merge
意味：名前付きコミットからチップコミットに到達できるブランチのみが一覧表示される。
・-d <ブランチ名>
意味：指定したブランチを削除する
例：git branch old_html
・-m <元ブランチ名> <新ブランチ名>
意味：ブランチ名の名前を付けなおすことができる。
例：git branch old_html new_html

・git log
「git log」はGitでのコミットの履歴をすべて表示するためのコードである。以下には「git log」のオプションの代表例をいくつか挙げる。オプションによってさまざまな履歴の確認を行うことができる。
・--oneline
意味：現在操作しているページのコミットを一行で表示する。
・--graph
意味：ブランチの分岐や統合をツリー形式で表示する。
・--all
意味：すべてのブランチのログを表示する。
例：git log --oneline --graph --decorate --all  (ブランチの流れを可視化する)
・--author="名前"
意味：指定した人がコミットを操作した履歴を表示する。
例：git log --author="yusuke-0528"

・git status
「git status」はブランチやファイルがステージにいるかどうかなど、現在のレポジトリの状態を確認することができる。以下には「git status」の代表的なオプションを挙げる。
・--short
意味：「git status」の表示をより簡潔に表示することができる。
・--branch
意味：現在操作している対象のブランチの情報を出力する。

・git add
「git add」の役割は操作していたディレクトリで変更したファイルをステージに追加するためのコード。基本構造としては、コードの後ろに<ファイル名>を追加することで、指定されたファイルがステージに上げれらる。以下には「git add」の代表的なオプションを挙げる。
・.
意味：すべての変更をステージに上げることができる。
・-A
意味：追加されたファイルと削除されたファイルもすべてステージに上げる。
・-u
意味：追跡中のファイルの変更と削除のみをステージに上げる。
・-p
意味：「-p」をつけることにより、ファイルをステージに上げる前に変更箇所を提示してくるようになる。

・git commit
「git commit」は「git add」によりステージに追加した内容を履歴として確定させるコマンドである。これにより「いつ、だれが、何を、どのように変更したか」ということを記録することができる。
・-m"メッセージ内容"
意味：コミットメッセージを直接指定するコードであり、「git commit」を使う際にはほぼ必須のオプションである。
・-a
意味：ステージしていない変更もすべて自動で追加しコミットする。
・--amend
意味：直前のコミットについて内容を修正できる。

・git diff
「git diff」はコミット前後やブランチ間、ステージ間などのワークツリーとステージでの変更差分を確認することができるコマンド。また修正内容をレビューするために使用されることもある。オプションの代表例を以下に示す。
・--staged
意味：ステージに追加した変更のみを表示する。
・--word-diff
意味：単語単位での差分を出力する。「git diff」よりも細かく出力することができる。

・git push
「git push」はローカルのブランチで変更したものをリモートリポジトリに反映するためのコマンド。また新しいブランチをリモートに作成することができる。また代表的なオプションを以下に示す。
・--all
意味：すべてのローカルブランチをリモートにpushする。
・--force
意味：強制的に上書を行いpushすることができる。これまでの履歴を破壊する可能性があるため注意は必要である。

・git pull
「git pull」はリモートレポジトリから最新の変更内容について取得し、個々のローカルブランチにマージするコードである。複数人で共同開発を行っていく場合には、他者の変更内容を取り込む機会が多くあるので頻繁に使用される。オプションの代表例を以下に示す。
・--no-commit
意味：マージ後に児童にコミットせずに変更した項目のみ適応する。

・git fetch
「git fetch」はリモートリポジトリの最新の状態を取得するコマンド。コマンドの特徴としてローカルには変更を反映しないことからデータの管理の観点で安全な操作と言える。オプションの代表例を以下に示す。
・--all
意味：すべてのリモートの全ブランチを取得する。
・--verbose
意味：取得データの詳細を出力する。

・git merge
「git merge」はブランチの変更内容を1つの「main」ブランチに統合するコマンド。他者が変更したブランチの内容を自分のパソコンに取り込み作業を行うことができる。オプションの代表例を以下に示す。
・--commit
意味：「merge」を行った際に自動的にコミットを行う。
・--abort
意味：コンフリクトなどの問題が発生した場合に「merge」を中止する。