・レポジトリー
Gitにおけるレポジトリとは、ファイルの履歴や変更情報を記録・管理するための保存場所のこと。ソースコードやドキュメントなどの変更履歴を追跡でき、過去の状態に戻したり、複数人での開発時に差分を統合することが可能になる。ローカルとリモートに分かれており、ローカルは自分のPC上で操作、リモートはGitHubなどを通じて共有・連携に用いられます。開発の中心的な役割を担う仕組みである。

・リモートレポジトリ
Gitにおけるリモートレポジトリとは、インターネット上やネットワーク上に存在する共有用のリポジトリであり、複数人での共同開発やバックアップのために利用される。開発者はローカルで作業した後、その変更内容をリモートレポジトリに「push」して共有し、他のメンバーの変更を「pull」して取り込むことができます。GitHubやGitLabなどのサービスが一般的なリモートレポジトリの公開して共有できるようにする場所として使われます。

・ローカルレポジトリ
Gitにおけるローカルレポジトリとは、開発者のパソコン内にあるリポジトリで、ファイルの履歴や変更内容を記録・管理する場所のこと。インターネットに接続せずに「add」や「commit」などの操作が可能で、作業の履歴を手元で自由に扱うことができる。リモートレポジトリと連携することで、変更を「push」して共有したり、他の人の更新を「pull」して取り込むこともできます。チーム開発ではなく個人で開発を進めていくにあたり活用されるものである。

・ブランチ
Gitにおけるブランチとは、作業の履歴を分岐させて管理する仕組みで、新しい機能の追加や修正を既存のコードに影響を与えずに進めるために使われる。ブランチごとに独立した作業が可能で、完成後に他のブランチへマージすることで統合され、統合先はブランチを作成した際に自動で作成される「main」に統合されることが多い。これにより複数人で同時に作業しても衝突を避けやすくなり、効率的な開発が可能となる。Gitにおいて履歴管理と開発を進めていくうえで中核となる機能となっている。

・リモートブランチ
Gitにおけるリモートブランチとは、GitHubなどのインターネット上のリモートリポジトリ上に存在するブランチで、他の開発者と共有するために使われている。ローカルブランチとは異なり、「push」コマンドでアップロードされることで作成され、他の人は「fetch」や「pull」でその内容を取得することができる。共同作業の中で変更履歴を管理しやすくし、「Pull Request」を通じて他者からコメントをもらうことが可能で得あることから、チーム開発における重要な連携手段となっている。

・ローカルブランチ
Gitにおけるローカルブランチとは、開発者のパソコン上で作成・管理されるブランチで、インターネット上に公開せずに個別の作業を進めることができる。新機能の追加や修正、実験的な変更などを他の作業に影響を与えずに行うために使われ、変更内容は「commit」で履歴として保存され、必要に応じてリモートブランチとして「push」することも可能である。簡単に作業を切り分け、バージョン管理を整理するための重要な単位となっている。

・デフォルトブランチ
Gitにおけるデフォルトブランチとは、リポジトリで最初に設定される中心となるブランチで、新しいブランチの作成元や「Pull Request」のマージ先として使われます。通常はレポジトリが新規作成されたときに、自動で「main」や「master」という名前で設定され、最も安定したバージョンのコードが管理される。GitHub上ではリポジトリを開いたときに最初に表示され、CI/CDなどの自動処理の基準にもなっており、開発の基盤として重要な役割を担うブランチである。

・ワークツリー
Gitにおけるワークツリーとは、実際にファイルを作成・編集する作業の場所のことである。開発者が手元でコードを変更する場所もワークツリーに該当する。Gitはこのワークツリーとステージ、リポジトリの3層で管理されており、ワークツリーでの変更はそのままでは履歴に残らず、addコマンドでステージに追加しなければならないことに注意する必要がある。ワークツリーは現在のブランチの状態を反映し、ブランチを切り替えると内容も切り替わる仕組みになっている。

・インデックス・ステージ
Gitにおけるインデックスとステージは同じものである。これらは、次にコミットする変更を一時的に記録しておく仮想領域のことを指す。作業ディレクトリで行った変更は、「git add」コマンドでインデックスに追加され、「git commit」でリポジトリに保存される。これにより、複数の変更の中から一部だけを選んでコミットすることが可能となる。インデックスはワークツリーとリポジトリの橋渡しをする役割を持ち、細かい履歴管理を可能にする重要な仕組みとなっている